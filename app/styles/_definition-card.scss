.definition-card {
  border-left: $space-s solid;

  .definition-header {
    font-size: 2.2rem;
    margin-top: $space-l;
    margin-bottom: $space-m;
    text-align: center;
  }

  .definition-attributes {
    display: flex;
    span {
      font-size: 1.2rem;
      flex: 1;

      &.pronunciation {
        text-align: left;
      }
      &.syllables {
        text-align: center;
      }
      &.part-of-speech {
        text-align: right;
      }
    }
  }

  ol.definition-list {
    counter-reset: item;
    margin-left: 0;
    padding-left: 0;

    li.definition-item {
      display: block;
      padding: $space-m $space-l;

      &:not(:last-child) {
        border-bottom: 1px solid #eee;
      }

      &:before {
        // custom numbering
        float: left;
        content: counter(item) ".";
        margin-left: -1.5rem;
        counter-increment: item;
        color: grey;
      }

      .definition {
        margin: 0;
        margin-bottom: $space-m;
      }

      .examples {
        color: grey;
        font-style: italic;
        margin-bottom: $space-m;
        &:before {
          content: 'e.g.';
          float: left;
        }
        .example {
          padding-left: $space-l;
          margin: 0;
          margin-bottom: $space-s;
        }
      }

      .related {
        margin-bottom: $space-s;
        .small {
          font-size: 0.8rem;
          color: grey;
        }
        .word-link:not(:last-child):after {
          // add comma after each word
          content: ',';
          margin-left: -3px;
        }
      }
    }
  }
}

// Definitions for each part of speech get distinct colors
$colormap: (
  adjective: 'purple',
  adverb: 'indigo',
  conjunction: 'brown',
  definite-article: 'orange',
  noun: 'red',
  preposition: 'light-green',
  pronoun: 'yellow',
  verb: 'green'
);

@each $type, $color in $colormap {
  .definition-card.#{$type} {
    border-color: color($color);

    a {
      color: color($color);
      &:hover {
        color: color($color, 'A400');
      }
    }

    .definition-tree {
      border: 1px dashed color($color);
      border-radius: $border-radius;
    }
    .node {
      circle {
        stroke: color($color, 'A400');
      }
      &:hover circle{
        fill: color($color, 'A100');
      }
    }

    .self-node circle {
      fill: color($color);
    }
  }
}
